/**
 * CustomToggleSwitch Component
 *
 * This component renders a toggle switch with a label. The switch can be toggled between
 * active and inactive states, and its appearance changes accordingly. It uses the `onToggle`
 * prop to handle toggling actions.
 *
 * @component
 * @param {Object} props - The props object.
 * @param {string} props.label - The label text displayed next to the toggle switch.
 * @param {boolean} props.isActive - The state indicating whether the toggle is active or not.
 * @param {function} props.onToggle - The function to be called when the toggle is clicked.
 *
 * @returns {JSX.Element} The rendered CustomToggleSwitch component.
 *
 * @example
 * <CustomToggleSwitch
 *   label="Enable Notifications"
 *   isActive={true}
 *   onToggle={handleToggle}
 * />
 *
 * JSDoc comments above were generated by ChatGPT
 */

// eslint-disable-next-line react/prop-types
const CustomToggleSwitch = ({ label, isActive, onToggle }) => {
  return (
    <div className="mb-4">
      <label className="block text-lg font-medium mb-2">{label}</label>
      <div
        className={`relative inline-block w-12 h-6 ${
          isActive ? "bg-primary" : "bg-gray-cool"
        } rounded-full cursor-pointer`}
        onClick={onToggle} // Call onToggle function when the switch is clicked
      >
        {/* Toggle knob */}
        {/* Position the knob based on whether the switch is active */}
        <span
          className={`absolute left-1 top-1 w-4 h-4 bg-white rounded-full transition-transform duration-200 ${
            isActive ? "transform translate-x-6" : ""
          }`}
        ></span>
      </div>
    </div>
  );
};

export default CustomToggleSwitch;

// This toggle switch was created with reference to the tutorial on W3Schools:
// https://www.w3schools.com/howto/howto_css_switch.asp
