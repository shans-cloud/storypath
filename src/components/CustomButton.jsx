import { Link } from "react-router-dom";

/**
 * CustomButton Component
 *
 * This component renders either a button or a link based on the props provided.
 * If the `to` prop is provided, it renders a `Link` for navigation, otherwise,
 * it renders a standard button element. It supports custom styling through the `className` prop.
 *
 * @component
 * @param {Object} props - The props object.
 * @param {string} props.label - The text label to be displayed on the button.
 * @param {string} props.className - Additional class names for styling the button or link.
 * @param {function} [props.onClick] - The onClick handler function for the button.
 * @param {string} [props.to] - The destination path for navigation when using a `Link`.
 *
 * @returns {JSX.Element} The rendered button or link.
 *
 * @example
 * <CustomButton label="Go to Home" to="/home" className="bg-primary text-white" />
 *
 * JSDoc comments above were generated by ChatGPT
 */

// eslint-disable-next-line react/prop-types
const CustomButton = ({ label, className, onClick, to }) => {
  // If the "to" prop is provided, render a Link. Otherwise, render a button.
  if (to) {
    return (
      <Link to={to} className={`px-4 py-1 inline-block rounded ${className}`}>
        {label}
      </Link>
    );
  }

  // Render a standard button element when the "to" prop is not provided.
  return (
    <button onClick={onClick} className={`px-4 py-1 rounded ${className}`}>
      {label}
    </button>
  );
};

export default CustomButton;
